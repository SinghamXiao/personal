apply plugin: 'java'

group 'project'
version '1.0-SNAPSHOT'

repositories {
/*    mavenLocal()

    mavenCentral()*/

    maven{ url 'http://maven.derbysoft.tm/artifactory/libs-release'}
}

dependencies {
    compile group: 'com.rabbitmq', name: 'amqp-client', version: '4.0.1'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.8'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.8'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'

    compile group: 'org.apache.ws.commons.axiom', name: 'axiom-api', version: '1.2.20'
    compile group: 'xerces', name: 'xercesImpl', version: '2.9.1'

    compile group: 'org.apache.spark', name: 'spark-core_2.11', version: '2.0.0'
    compile group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.0.0'
    compile group: 'org.apache.spark', name: 'spark-streaming_2.11', version: '2.0.0'
    compile group: 'org.apache.spark', name: 'spark-streaming-flume_2.11', version: '2.0.0'
    compile group: 'org.apache.spark', name: 'spark-streaming-kafka_2.11', version: '1.6.2'
    compile group: 'org.apache.spark', name: 'spark-mllib_2.11', version: '2.0.0'
    compile group: 'org.apache.spark', name: 'spark-graphx_2.11', version: '2.0.0'
    compile group: 'org.apache.spark', name: 'spark-hive_2.11', version: '2.0.0'

    compile group: 'com.github.scopt', name: 'scopt_2.11', version: '3.5.0'

    compile group: 'com.espertech', name: 'esper', version: '5.5.0'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.17'

    compile group: 'org.apache.kafka', name: 'kafka_2.11', version: '0.10.0.1'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.10.0.1'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'

    compile group: 'javax.mail', name: 'mail', version: '1.4.7'

    testCompile group: 'junit', name: 'junit', version: '4.12'

/*    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0-M3'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0-M3'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-migration-support', version: '5.0.0-M3'

    testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.0.0-M3'
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.0.0-M3'
    testCompile group: 'org.junit.platform', name: 'junit-platform-console', version: '1.0.0-M3'
    testCompile group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.0.0-M3'
    testCompile group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.0.0-M3'
    testCompile group: 'org.junit.platform', name: 'junit-platform-surefire-provider', version: '1.0.0-M3'
    testCompile group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.0.0-M3'

    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '4.12.0-M3'*/
}

ext.libPath = "$buildDir/libs/libs"

task copyToLib( type: Copy ) {
    into "$libPath"
    from configurations.runtime
}

jar {
    manifest {
        attributes 'Main-Class': 'Main'
        attributes 'Class-Path': configurations.runtime.collect { "libs/" + it.getName() }.join(' ')
    }
}

jar.dependsOn copyToLib

/*jar {
    manifest {
        attributes 'Main-Class': 'Main'
    }

    from {
        configurations.compile.collect{ it.isDirectory() ? it : zipTree(it) }
    }
}*/

apply plugin: "jacoco"

jacoco {
    // toolVersion = "0.7.8"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

apply plugin: "application"
apply plugin: "jacoco"

mainClassName = "main"

jacoco {
    applyTo run
}

task applicationCodeCoverageReport(type: JacocoReport) {
    executionData run
    sourceSets sourceSets.main
}
